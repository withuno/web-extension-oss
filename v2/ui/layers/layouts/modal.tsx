import { useCallback } from "react";

import { clsx } from "clsx";
import { useIsPresent } from "framer-motion";

import { OpenFeedbackModal } from "@/v2/actions/v1-compat/open-feedback-modal.action";
import { useUnoOrchestrator } from "@/v2/orchestrator/react";

import { Base } from "./base";
import { transitions } from "../../hooks/transitions";
import { Styleable, WithChildren } from "../../prop.types";
import { useRouterState } from "../../router";
import { useCloseLayer, useLayerFocus } from "../layer-context";

export namespace Modal {
  export function Layout(props: WithChildren) {
    const layerFocus = useLayerFocus();
    const { direction } = useRouterState();

    const isPresent = useIsPresent();

    const modalAnimation = transitions.useScale().getProps(0.97);
    const contentAnimation = transitions.useSlide().getProps({ x: isPresent && direction ? 50 : 0, direction });

    return (
      <Base.Layout
        id="modal"
        className={clsx(
          "pointer-events-auto flex flex-col overflow-hidden border border-black/10 bg-white",
          layerFocus.isFocused ? "shadow-xl" : "shadow-md",
          !layerFocus.isFocused && !layerFocus.childIsFocused && !layerFocus.parentIsFocused && "brightness-90",
        )}
        style={{ borderRadius: 16 }}
        transition={{
          duration: 0.15,
          layout: { duration: 0.1, ease: "easeInOut" },
        }}
        {...modalAnimation}
      >
        <Base.View transition={{ duration: 0.15 }} {...contentAnimation}>
          {props.children}
        </Base.View>
      </Base.Layout>
    );
  }

  export interface CloseButtonProps extends Styleable {
    onClose?: () => void;
  }

  export function CloseButton(props: CloseButtonProps) {
    const { onClose, ...styleableProps } = props;

    const close = useCloseLayer();
    const handleClose = useCallback(() => {
      onClose?.();
      close();
    }, [close, onClose]);

    return (
      <button {...styleableProps} onClick={handleClose} aria-label="Close">
        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8.36719 16.8281C12.7266 16.8281 16.3359 13.2109 16.3359 8.85938C16.3359 4.5 12.7188 0.890625 8.35938 0.890625C4.00781 0.890625 0.398438 4.5 0.398438 8.85938C0.398438 13.2109 4.01562 16.8281 8.36719 16.8281ZM5.74219 12.1406C5.38281 12.1406 5.10156 11.8516 5.10156 11.4922C5.10156 11.3203 5.16406 11.1562 5.28906 11.0391L7.45312 8.86719L5.28906 6.70312C5.16406 6.57812 5.10156 6.42188 5.10156 6.25C5.10156 5.88281 5.38281 5.60938 5.74219 5.60938C5.92188 5.60938 6.0625 5.67188 6.1875 5.78906L8.36719 7.96094L10.5625 5.78125C10.6953 5.64844 10.8359 5.59375 11.0078 5.59375C11.3672 5.59375 11.6562 5.875 11.6562 6.23438C11.6562 6.41406 11.6016 6.55469 11.4609 6.69531L9.28906 8.86719L11.4531 11.0312C11.5859 11.1484 11.6484 11.3125 11.6484 11.4922C11.6484 11.8516 11.3594 12.1406 10.9922 12.1406C10.8125 12.1406 10.6484 12.0781 10.5312 11.9531L8.36719 9.78125L6.21094 11.9531C6.08594 12.0781 5.92188 12.1406 5.74219 12.1406Z"
            fill="#C6C8CC"
          />
        </svg>
      </button>
    );
  }

  export interface FeedbackButtonProps extends Styleable {
    customFeedback?: string;
  }

  export function FeedbackButton(props: FeedbackButtonProps) {
    const { customFeedback, ...styleableProps } = props;

    const { orchestrator } = useUnoOrchestrator();
    const close = useCloseLayer();

    const openFeedback = useCallback(async () => {
      await close();
      await orchestrator.useAction(OpenFeedbackModal)({ customFeedback });
    }, [customFeedback, close]);

    return (
      <button {...styleableProps} onClick={openFeedback} aria-label="Share feedback or report a bug">
        <div
          className="flex h-[17px] w-[17px] items-center justify-center rounded-full bg-[#ffd9d9]"
          aria-label="Share feedback or report a bug"
        >
          <svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              d="M2.69922 2.83203C2.69922 2.9388 2.72396 3.03385 2.77344 3.11719C2.82552 3.20052 2.92578 3.27995 3.07422 3.35547C3.29036 3.46224 3.55599 3.54557 3.87109 3.60547C4.1862 3.66536 4.51562 3.69531 4.85938 3.69531C5.20573 3.69531 5.53646 3.66536 5.85156 3.60547C6.16667 3.54557 6.43229 3.46224 6.64844 3.35547C6.79688 3.27995 6.89583 3.20052 6.94531 3.11719C6.9974 3.03385 7.02344 2.9388 7.02344 2.83203C7.02344 2.53255 6.9349 2.26042 6.75781 2.01562C6.58333 1.77083 6.33464 1.57552 6.01172 1.42969C5.6888 1.28385 5.30469 1.21094 4.85938 1.21094C4.41667 1.21094 4.03385 1.28385 3.71094 1.42969C3.38802 1.57552 3.13802 1.77083 2.96094 2.01562C2.78646 2.26042 2.69922 2.53255 2.69922 2.83203ZM1.3125 6.3125C1.3125 6.95573 1.42969 7.52995 1.66406 8.03516C1.89844 8.54297 2.22656 8.95703 2.64844 9.27734C3.07292 9.60026 3.57031 9.80339 4.14062 9.88672C4.27344 9.90755 4.3763 9.89323 4.44922 9.84375C4.52474 9.79427 4.5625 9.71484 4.5625 9.60547V5.20703C4.5625 5.1237 4.59115 5.05339 4.64844 4.99609C4.70573 4.9388 4.77604 4.91016 4.85938 4.91016C4.94271 4.91016 5.01302 4.9388 5.07031 4.99609C5.13021 5.05339 5.16016 5.1237 5.16016 5.20703V9.60547C5.16016 9.71484 5.19661 9.79427 5.26953 9.84375C5.34505 9.89323 5.44922 9.90755 5.58203 9.88672C6.15234 9.80339 6.64844 9.60026 7.07031 9.27734C7.49479 8.95703 7.82422 8.54297 8.05859 8.03516C8.29297 7.52995 8.41016 6.95573 8.41016 6.3125C8.41016 6.02865 8.375 5.72656 8.30469 5.40625C8.23698 5.08333 8.13802 4.78255 8.00781 4.50391C7.8776 4.22266 7.71875 4 7.53125 3.83594C7.42188 3.73698 7.32552 3.68229 7.24219 3.67188C7.16146 3.66146 7.08854 3.67057 7.02344 3.69922C6.72656 3.84766 6.39323 3.96224 6.02344 4.04297C5.65625 4.12109 5.26823 4.16016 4.85938 4.16016C4.45052 4.16016 4.0625 4.12109 3.69531 4.04297C3.32812 3.96224 2.99609 3.84766 2.69922 3.69922C2.63411 3.67057 2.5599 3.66146 2.47656 3.67188C2.39583 3.68229 2.30078 3.73698 2.19141 3.83594C2.00391 4 1.84505 4.22266 1.71484 4.50391C1.58464 4.78255 1.48438 5.08333 1.41406 5.40625C1.34635 5.72656 1.3125 6.02865 1.3125 6.3125ZM3.26562 5.61719C3.11979 5.61719 2.99609 5.5651 2.89453 5.46094C2.79297 5.35677 2.74219 5.23438 2.74219 5.09375C2.74219 4.95052 2.79297 4.82682 2.89453 4.72266C2.99609 4.61849 3.11979 4.56641 3.26562 4.56641C3.40885 4.56641 3.53125 4.61849 3.63281 4.72266C3.73698 4.82682 3.78906 4.95052 3.78906 5.09375C3.78906 5.23438 3.73698 5.35677 3.63281 5.46094C3.53125 5.5651 3.40885 5.61719 3.26562 5.61719ZM2.86328 7.32812C2.69401 7.32812 2.54948 7.26823 2.42969 7.14844C2.3125 7.02865 2.25391 6.88542 2.25391 6.71875C2.25391 6.55208 2.3125 6.41016 2.42969 6.29297C2.54948 6.17578 2.69401 6.11719 2.86328 6.11719C3.02734 6.11719 3.16797 6.17708 3.28516 6.29688C3.40495 6.41406 3.46484 6.55469 3.46484 6.71875C3.46484 6.88542 3.40495 7.02865 3.28516 7.14844C3.16797 7.26823 3.02734 7.32812 2.86328 7.32812ZM3.36328 8.76562C3.23828 8.76562 3.13151 8.72135 3.04297 8.63281C2.95443 8.54427 2.91016 8.4375 2.91016 8.3125C2.91016 8.1875 2.95443 8.08073 3.04297 7.99219C3.13151 7.90365 3.23828 7.85938 3.36328 7.85938C3.48828 7.85938 3.59505 7.90365 3.68359 7.99219C3.77214 8.08073 3.81641 8.1875 3.81641 8.3125C3.81641 8.4375 3.77214 8.54427 3.68359 8.63281C3.59505 8.72135 3.48828 8.76562 3.36328 8.76562ZM6.46094 5.61719C6.3151 5.61719 6.1901 5.5651 6.08594 5.46094C5.98438 5.35677 5.93359 5.23438 5.93359 5.09375C5.93359 4.95052 5.98438 4.82682 6.08594 4.72266C6.1901 4.61849 6.3151 4.56641 6.46094 4.56641C6.60417 4.56641 6.72656 4.61849 6.82812 4.72266C6.92969 4.82682 6.98047 4.95052 6.98047 5.09375C6.98047 5.23438 6.92969 5.35677 6.82812 5.46094C6.72656 5.5651 6.60417 5.61719 6.46094 5.61719ZM6.86328 7.32812C6.69401 7.32812 6.55078 7.26823 6.43359 7.14844C6.31641 7.02865 6.25781 6.88542 6.25781 6.71875C6.25781 6.55469 6.31641 6.41406 6.43359 6.29688C6.55078 6.17708 6.69401 6.11719 6.86328 6.11719C7.02995 6.11719 7.17188 6.17578 7.28906 6.29297C7.40885 6.41016 7.46875 6.55208 7.46875 6.71875C7.46875 6.88542 7.40885 7.02865 7.28906 7.14844C7.17188 7.26823 7.02995 7.32812 6.86328 7.32812ZM6.35938 8.76562C6.23438 8.76562 6.1276 8.72135 6.03906 8.63281C5.95052 8.54427 5.90625 8.4375 5.90625 8.3125C5.90625 8.1875 5.95052 8.08073 6.03906 7.99219C6.1276 7.90365 6.23438 7.85938 6.35938 7.85938C6.48438 7.85938 6.59115 7.90365 6.67969 7.99219C6.76823 8.08073 6.8125 8.1875 6.8125 8.3125C6.8125 8.4375 6.76823 8.54427 6.67969 8.63281C6.59115 8.72135 6.48438 8.76562 6.35938 8.76562ZM3.11328 1.11719L3.36328 1.19922C3.4388 1.22526 3.49089 1.25781 3.51953 1.29688C3.54818 1.33333 3.55599 1.38021 3.54297 1.4375L3.48047 1.67969L4.19141 1.67578L4.21875 1.44141C4.23958 1.23047 4.20052 1.05078 4.10156 0.902344C4.00521 0.751302 3.85286 0.639323 3.64453 0.566406L3.34766 0.453125C3.23047 0.414062 3.13021 0.419271 3.04688 0.46875C2.96615 0.518229 2.91016 0.58724 2.87891 0.675781C2.85026 0.764323 2.85286 0.851562 2.88672 0.9375C2.92318 1.02344 2.9987 1.08333 3.11328 1.11719ZM6.60547 1.11719C6.72005 1.08333 6.79427 1.02344 6.82812 0.9375C6.86458 0.851562 6.86719 0.764323 6.83594 0.675781C6.80729 0.58724 6.7513 0.518229 6.66797 0.46875C6.58724 0.419271 6.48958 0.414062 6.375 0.453125L6.07812 0.566406C5.86719 0.639323 5.71224 0.751302 5.61328 0.902344C5.51432 1.05078 5.47786 1.23047 5.50391 1.44141L5.53125 1.67578L6.23828 1.67969L6.17578 1.4375C6.16276 1.38021 6.17057 1.33333 6.19922 1.29688C6.22786 1.25781 6.28125 1.22526 6.35938 1.19922L6.60547 1.11719ZM2.49219 3.92188L1.61719 3.21094C1.52604 3.13802 1.42969 3.10156 1.32812 3.10156C1.22656 3.09896 1.14193 3.13932 1.07422 3.22266C1.0013 3.30599 0.973958 3.39974 0.992188 3.50391C1.01042 3.60547 1.0638 3.69141 1.15234 3.76172L2.03516 4.47656L2.49219 3.92188ZM1.70703 5.73438H0.683594C0.56901 5.73438 0.47526 5.76823 0.402344 5.83594C0.332031 5.90365 0.296875 5.99219 0.296875 6.10156C0.296875 6.20833 0.332031 6.29557 0.402344 6.36328C0.47526 6.42839 0.570312 6.46094 0.6875 6.46094L1.70703 6.45703V5.73438ZM1.97656 8.03516L1.20312 8.68359C1.11719 8.75911 1.0651 8.84766 1.04688 8.94922C1.02865 9.05078 1.05469 9.14323 1.125 9.22656C1.19531 9.3125 1.28125 9.35547 1.38281 9.35547C1.48698 9.35547 1.58333 9.31641 1.67188 9.23828L2.4375 8.59375L1.97656 8.03516ZM7.23047 3.92188L7.6875 4.47656L8.57031 3.76172C8.65885 3.69141 8.71094 3.60547 8.72656 3.50391C8.74479 3.39974 8.71875 3.30599 8.64844 3.22266C8.58073 3.13932 8.49609 3.09896 8.39453 3.10156C8.29297 3.10156 8.19661 3.13802 8.10547 3.21094L7.23047 3.92188ZM8.01562 5.73438V6.45703L9.03516 6.46094C9.15234 6.46094 9.24609 6.42839 9.31641 6.36328C9.38932 6.29557 9.42578 6.20833 9.42578 6.10156C9.42578 5.99219 9.38932 5.90365 9.31641 5.83594C9.24609 5.76823 9.15365 5.73438 9.03906 5.73438H8.01562ZM7.74609 8.03516L7.28516 8.59375L8.05078 9.23828C8.13932 9.31641 8.23438 9.35547 8.33594 9.35547C8.4401 9.35547 8.52734 9.3125 8.59766 9.22656C8.66797 9.14323 8.69401 9.05078 8.67578 8.94922C8.65755 8.84766 8.60417 8.75911 8.51562 8.68359L7.74609 8.03516Z"
              fill="#FC511F"
            />
          </svg>
        </div>
      </button>
    );
  }
}
